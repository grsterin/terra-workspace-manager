buildscript {
	repositories {
		mavenCentral()
	}
    // This is all for the artifactory plugin
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.jfrog.artifactory', name: 'com.jfrog.artifactory.gradle.plugin', version: '4.13.0', ext: 'pom'
    }
}

plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.google.cloud.tools.jib' version '1.8.0'
	id 'org.openapi.generator' version '4.2.3'
	id 'com.diffplug.gradle.spotless' version '3.27.2'
	id 'maven-publish'
	id 'com.jfrog.artifactory' version '4.13.0'
}

group = 'bio.terra.workspace'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

repositories {
	mavenCentral()
	maven {
		url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
	}
	maven {
		url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
	}
}

dependencies {
	compile(group: 'bio.terra', name: 'stairway', version: '0.0.4.1-SNAPSHOT')
	compile(group: 'bio.terra', name: 'datarepo-client', version: '1.0.1-SNAPSHOT')
	compile(group: 'org.broadinstitute.dsde.workbench', name: 'sam-client_2.12', version: '0.1-11a7002')
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.1.4'
	implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
	implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.8.0'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	implementation group: 'org.liquibase' , name: 'liquibase-core', version: '3.8.6'
	implementation group: 'org.webjars', name: 'swagger-ui', version: '3.24.0'

	// -- OpenAPI CodeGen dependencies --
	// TODO: this version of swagger-annotations is old, but the code gen is still relying on it
	//  There is an open bug tracking the fix: https://github.com/OpenAPITools/openapi-generator/issues/4245
	implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.0'
	implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'
	// -- --

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

// Exclude the Spring logger, so everything will use SLF4J
configurations.all {
	exclude group: "commons-logging", module: "commons-logging"
}

// OpenAPI Server Generation
// - specify the source and target
// - define the generation
// - define the validation
// - define dependencies to include the generated code

def openapiSourceFile = "${projectDir}/src/main/resources/api/service_openapi.yaml"
def openapiTargetDir = "${buildDir}/generated"

openApiGenerate {
	generatorName = "spring"
	inputSpec = "${openapiSourceFile}".toString()
	outputDir = "${openapiTargetDir}".toString()
	packageName = "${group}"
	apiPackage = "${group}.generated.controller"
	modelPackage = "${group}.generated.model"
	configOptions = [
	        interfaceOnly : "true",
			useTags : "true",
			library : "spring-boot",
			dateLibrary : "java8",
			generateApiTests : "false",
			generateApiDocumentation : "false",
			generateModelTests : "false",
			generateModelDocumentation : "false",
	]
}

openApiValidate {
	inputSpec = "${openapiSourceFile}".toString()
}

// Note: Spotless deletes the classes OpenApi generates.
// The order needs to be spotlessApply -> openApiGenerate -> build/test/run
tasks.openApiGenerate.dependsOn tasks.spotlessApply
compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "${openapiTargetDir}/src/main/java"
ideaModule.dependsOn tasks.openApiGenerate

// end of OpenAPI Server Generation

test {
	useJUnitPlatform()
}

spotless {
	java {
		googleJavaFormat()
	}
}

java {
    withJavadocJar()
}

publishing {
    publications {
        terraWorkspaceManagerLibrary(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute/'
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = "${artifactory_username}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('terraWorkspaceManagerLibrary')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            // properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}
